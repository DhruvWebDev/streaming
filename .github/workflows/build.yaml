name: Build and Push Docker Images

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      # Checkout Repository
      - name: Checkout Repository
        uses: actions/checkout@v4

      # Set Commit SHA
      - name: Set Commit SHA
        run: echo "COMMIT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      # Docker Hub Login
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Log in to AWS ECR
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: eu-north-1

      - name: Login to AWS ECR
        id: ecr-login
        uses: aws-actions/amazon-ecr-login@v1

      # Set AWS ECR Registry
      - name: Set AWS ECR Registry
        run: echo "AWS_ECR_REGISTRY=${{ steps.ecr-login.outputs.registry }}" >> $GITHUB_ENV

      # Authenticate Docker Client with AWS
      - name: Authenticate Docker Client with AWS 
        run: aws ecr get-login-password --region eu-north-1 | docker login --username AWS --password-stdin $AWS_ECR_REGISTRY

      # Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      # Install Docker Compose
      - name: Install Docker Compose
        run: |
          curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          chmod +x /usr/local/bin/docker-compose

      # Build Services using Docker Compose
      - name: Build Services
        run: |
          echo "Building all services with Docker Compose..."
          docker-compose -f ./docker-compose.yaml build

      # List Docker Images (for Debugging)
      - name: List Docker Images
        run: docker images

      # Ensure AWS ECR repositories exist
      - name: Create ECR Repositories if Missing
        run: |
          for service in streaming-frontend streaming-worker; do
            echo "Checking if AWS ECR repository for ${service} exists..."
            if ! aws ecr describe-repositories --repository-names ${service} > /dev/null 2>&1; then
              echo "Creating AWS ECR repository: ${service}"
              aws ecr create-repository --repository-name ${service} --image-scanning-configuration scanOnPush=true --region eu-north-1
            fi
          done

      # Tag & Push to Docker Hub
      - name: Push to Docker Hub
        run: |
          for service in streaming-frontend streaming-worker; do
            echo "Tagging and pushing ${service} to Docker Hub..."
            docker tag ${service}:latest dhruvwebdev146/${service}:${COMMIT_SHA}
            docker tag ${service}:latest dhruvwebdev146/${service}:latest
            docker push dhruvwebdev146/${service}:${COMMIT_SHA}
            docker push dhruvwebdev146/${service}:latest 
          done

      # Tag & Push to AWS ECR
      - name: Push to AWS ECR
        run: |        
          for service in streaming-frontend streaming-worker; do
            echo "Tagging and pushing ${service} to AWS ECR..."
            docker tag ${service}:latest $AWS_ECR_REGISTRY/${service}:${COMMIT_SHA}
            docker tag ${service}:latest $AWS_ECR_REGISTRY/${service}:latest
            docker push $AWS_ECR_REGISTRY/${service}:${COMMIT_SHA}
            docker push $AWS_ECR_REGISTRY/${service}:latest
          done
